{"version":3,"file":"commons-edecfa3a9b32bdf969ac.js","mappings":"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","sources":["webpack://jobs-board/./src/components/Badge.jsx","webpack://jobs-board/./node_modules/marked/lib/marked.esm.js","webpack://jobs-board/./src/jobToMarkdown.js","webpack://jobs-board/./src/components/Job.jsx","webpack://jobs-board/./node_modules/dompurify/dist/purify.js","webpack://jobs-board/./src/components/Page.jsx"],"sourcesContent":["import React from \"react\";\n\nconst badgeSymbols = {\n  'Sponsor': '🚀',\n  'Pure OSS': '🍏',\n};\n\nconst badgeExplanation = {\n  'Sponsor': 'This entity is a sponsor of NumFOCUS',\n  'Pure OSS': 'This jobs entails working on Open Source full time'\n};\n\nconst Badge = ({ type }) => (\n  <div className=\"badge\">\n    <span role=\"img\" aria-label={type}>\n      { badgeSymbols[type] }\n      <span className=\"tooltip\">\n        { badgeExplanation[type] }\n      </span>\n    </span>\n  </div>\n);\n\nexport default Badge;\n","/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkSanitizeDeprecation(opt);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import { marked } from 'marked';\n\nexport const jobToMarkdown = (job) => {\n  const DOMPurify = (typeof window !== `undefined`) ?\n        require('dompurify') : undefined;\n\n  const sanitize = DOMPurify ? DOMPurify.sanitize : (x, y) => x;\n\n  return {\n    ...job,\n    description: sanitize(\n      marked(job.description),\n      {ALLOWED_TAGS: ['em', 'strong', 'ol', 'ul', 'li', 'br', 'p', 'a']}\n    )\n  };\n};\n\nexport default jobToMarkdown;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport Badge from \"./Badge\";\nimport jobToMarkdown from \"../jobToMarkdown.js\";\n\n\nconst Job = ({ job }) => {\n  if (job === undefined) {\n    console.log(\"We don't expect an empty job posting; aborting\");\n    return <div>Empty job posting</div>;\n  }\n\n  job = jobToMarkdown(job);\n  return (\n    <div className=\"job\">\n      <div className=\"badges\">\n        { job.badges &&\n          job.badges.map((badge) =>\n            <Badge key={badge} type={badge}/>\n          )\n        }\n        { (job.percentOSS === 100) &&\n          <Badge type=\"Pure OSS\"/>\n        }\n      </div>\n      <Link to={`/job/${job.id}`}>\n        <div className=\"title\">{ job.entity } / { job.title }</div>\n      </Link>\n      <div className=\"meta\">\n        { job.percentTime &&\n          <div className=\"percentTime\">This job is <b>{ job.percentTime }%</b> time.</div>\n        }\n        <div className=\"percentOSS\">\n          <b>{ job.percentOSS }%</b> of time is on <b>open source</b>.\n        </div>\n        { job.deadline &&\n          <div className=\"deadline\">\n            Application deadline: <b>{ job.deadline }</b>\n          </div>\n        }\n        { job.location &&\n          <div className=\"location\">\n            Location: { job.location }\n          </div>\n        }\n        { job.url &&\n          <div className=\"url\">\n            URL: <a href={job.url}>{ job.url }</a>\n          </div>\n        }\n      </div>\n      <div\n        className=\"description\"\n        key={ job.id }\n        dangerouslySetInnerHTML={{__html: job.description}}\n      />\n    </div>\n  );\n};\nexport default Job;\n","/*! @license DOMPurify | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.0.8/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.DOMPurify = factory());\n}(this, function () { 'use strict';\n\n  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var hasOwnProperty = Object.hasOwnProperty,\n      setPrototypeOf = Object.setPrototypeOf,\n      isFrozen = Object.isFrozen;\n  var freeze = Object.freeze,\n      seal = Object.seal,\n      create = Object.create; // eslint-disable-line import/no-mutable-exports\n\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\n      apply = _ref.apply,\n      construct = _ref.construct;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n    };\n  }\n\n  var arrayForEach = unapply(Array.prototype.forEach);\n  var arrayPop = unapply(Array.prototype.pop);\n  var arrayPush = unapply(Array.prototype.push);\n\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\n  var stringMatch = unapply(String.prototype.match);\n  var stringReplace = unapply(String.prototype.replace);\n  var stringIndexOf = unapply(String.prototype.indexOf);\n  var stringTrim = unapply(String.prototype.trim);\n\n  var regExpTest = unapply(RegExp.prototype.test);\n\n  var typeErrorCreate = unconstruct(TypeError);\n\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n\n  /* Add properties to a lookup table */\n  function addToSet(set, array) {\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    var l = array.length;\n    while (l--) {\n      var element = array[l];\n      if (typeof element === 'string') {\n        var lcElement = stringToLowerCase(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n\n  /* Shallow clone an object */\n  function clone(object) {\n    var newObject = create(null);\n\n    var property = void 0;\n    for (property in object) {\n      if (apply(hasOwnProperty, object, [property])) {\n        newObject[property] = object[property];\n      }\n    }\n\n    return newObject;\n  }\n\n  var html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  var svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern']);\n\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  var mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\n  var text = freeze(['#text']);\n\n  var html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns']);\n\n  var svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\n  var mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  var ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  function _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {Document} document The document object (to determine policy name suffix)\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported).\n   */\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    var suffix = null;\n    var ATTR_NAME = 'data-tt-policy-suffix';\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML: function createHTML(html$$1) {\n          return html$$1;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    var DOMPurify = function DOMPurify(root) {\n      return createDOMPurify(root);\n    };\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '2.2.2';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n\n      return DOMPurify;\n    }\n\n    var originalDocument = window.document;\n\n    var document = window.document;\n    var DocumentFragment = window.DocumentFragment,\n        HTMLTemplateElement = window.HTMLTemplateElement,\n        Node = window.Node,\n        NodeFilter = window.NodeFilter,\n        _window$NamedNodeMap = window.NamedNodeMap,\n        NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n        Text = window.Text,\n        Comment = window.Comment,\n        DOMParser = window.DOMParser,\n        trustedTypes = window.trustedTypes;\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n\n    if (typeof HTMLTemplateElement === 'function') {\n      var template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n    var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';\n\n    var _document = document,\n        implementation = _document.implementation,\n        createNodeIterator = _document.createNodeIterator,\n        getElementsByTagName = _document.getElementsByTagName,\n        createDocumentFragment = _document.createDocumentFragment;\n    var importNode = originalDocument.importNode;\n\n\n    var documentMode = {};\n    try {\n      documentMode = clone(document).documentMode ? document.documentMode : {};\n    } catch (_) {}\n\n    var hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n\n    var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n        ERB_EXPR$$1 = ERB_EXPR,\n        DATA_ATTR$$1 = DATA_ATTR,\n        ARIA_ATTR$$1 = ARIA_ATTR,\n        IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n    var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n\n    /* Allowed attribute names */\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    var FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    var FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    var ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    var ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    var SAFE_FOR_TEMPLATES = false;\n\n    /* Decide if document with <html>... should be returned */\n    var WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    var SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    var FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    var RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    var RETURN_DOM_FRAGMENT = false;\n\n    /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n     * `Node` is imported into the current `Document`. If this flag is not enabled the\n     * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n     * DOMPurify.\n     *\n     * This defaults to `true` starting DOMPurify 2.2.0. Note that setting it to `false`\n     * might cause XSS from attacks hidden in closed shadowroots in case the browser\n     * supports Declarative Shadow: DOM https://web.dev/declarative-shadow-dom/\n     */\n    var RETURN_DOM_IMPORT = true;\n\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n    var RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks? */\n    var SANITIZE_DOM = true;\n\n    /* Keep element content when removing element? */\n    var KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    var IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    var USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    var FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    var DATA_URI_TAGS = null;\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    var URI_SAFE_ATTRIBUTES = null;\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n    /* Keep a reference to config to pass to hooks */\n    var CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    var _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n        cfg = {};\n      }\n\n      /* Shield configuration object from prototype pollution */\n      cfg = clone(cfg);\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT !== false; // Default true\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html);\n          addToSet(ALLOWED_ATTR, html$1);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl);\n          addToSet(ALLOWED_ATTR, mathMl$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    var _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, { element: node });\n      try {\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        node.outerHTML = emptyHTML;\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    var _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name);\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    var _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      var doc = void 0;\n      var leadingWhitespace = void 0;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /* Use the DOMParser API by default, fallback later if needs be */\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\n      } catch (_) {}\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createHTMLDocument('');\n        var _doc = doc,\n            body = _doc.body;\n\n        body.parentNode.removeChild(body.parentNode.firstElementChild);\n        body.outerHTML = dirtyPayload;\n      }\n\n      if (dirty && leadingWhitespace) {\n        doc.body.insertBefore(document.createTextNode(leadingWhitespace), doc.body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    };\n\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n    var _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\n        return NodeFilter.FILTER_ACCEPT;\n      }, false);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    var _isClobbered = function _isClobbered(elm) {\n      if (elm instanceof Text || elm instanceof Comment) {\n        return false;\n      }\n\n      if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string') {\n        return true;\n      }\n\n      return false;\n    };\n\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    var _isNode = function _isNode(object) {\n      return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], function (hook) {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\n      var content = void 0;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Check if tagname contains Unicode */\n      if (stringMatch(currentNode.nodeName, /[\\u0080-\\uFFFF]/)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      var tagName = stringToLowerCase(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName: tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Take care of an mXSS pattern using p, br inside svg, math */\n      if ((tagName === 'svg' || tagName === 'math') && currentNode.querySelectorAll('p, br, form, table').length !== 0) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Detect mXSS attempts abusing namespace confusion */\n      if (!_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[!/\\w]/g, currentNode.innerHTML) && regExpTest(/<[!/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {\n          try {\n            var htmlToInsert = currentNode.innerHTML;\n            currentNode.insertAdjacentHTML('AfterEnd', trustedTypesPolicy ? trustedTypesPolicy.createHTML(htmlToInsert) : htmlToInsert);\n          } catch (_) {}\n        }\n\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove in case a noscript/noembed XSS is suspected */\n      if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n        content = stringReplace(content, ERB_EXPR$$1, ' ');\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        return false;\n\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {\n        return false;\n      }\n\n      return true;\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      var attr = void 0;\n      var value = void 0;\n      var lcName = void 0;\n      var l = void 0;\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      var attributes = currentNode.attributes;\n\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      var hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        attr = attributes[l];\n        var _attr = attr,\n            name = _attr.name,\n            namespaceURI = _attr.namespaceURI;\n\n        value = stringTrim(attr.value);\n        lcName = stringToLowerCase(name);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        _removeAttribute(name, currentNode);\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n          value = stringReplace(value, ERB_EXPR$$1, ' ');\n        }\n\n        /* Is `value` valid for this attribute? */\n        var lcTag = currentNode.nodeName.toLowerCase();\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      var shadowNode = void 0;\n      var shadowIterator = _createIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty, cfg) {\n      var body = void 0;\n      var importedNode = void 0;\n      var currentNode = void 0;\n      var oldNode = void 0;\n      var returnNode = void 0;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      if (!dirty) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n\n      /* Check we can run. Otherwise fall back or ignore */\n      if (!DOMPurify.isSupported) {\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n          if (typeof dirty === 'string') {\n            return window.toStaticHTML(dirty);\n          }\n\n          if (_isNode(dirty)) {\n            return window.toStaticHTML(dirty.outerHTML);\n          }\n        }\n\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) ; else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : emptyHTML;\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\n          continue;\n        }\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n\n        oldNode = currentNode;\n      }\n\n      oldNode = null;\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (RETURN_DOM_IMPORT) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      var lcTag = stringToLowerCase(tag);\n      var lcName = stringToLowerCase(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Page = ({ children }) => (\n  <div className=\"page\">\n    <div className=\"content\">\n      <div className=\"header\">\n        <Link to=\"/\">\n          <h1>NumFOCUS Jobs Board</h1>\n        </Link>\n      </div>\n      { children }\n    </div>\n  </div>\n);\n\nexport default Page;\n"],"names":["badgeSymbols","badgeExplanation","_ref","type","React","className","role","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","hooks","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","RegExp","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","html","encode","test","replace","unescapeTest","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","obj","name","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","i","trim","shift","length","pop","splice","push","c","invert","l","suffLen","currChar","slice","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","tokens","inlineTokens","Tokenizer","constructor","options","this","space","src","rules","block","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","indentCodeCompensation","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","t","repeat","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","filter","hasMultipleLineBreaks","some","pre","def","tag","table","item","header","align","rows","j","k","row","lheading","paragraph","escape","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","Object","create","inlineQueue","lex","lexInline","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","call","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","console","error","Error","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","value","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","hasOwnProperty","dryrun","Parser","textRenderer","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","parser","unshift","Hooks","static","Set","preprocess","markdown","postprocess","parseMarkdown","callback","origOpt","throwError","message","msg","Promise","resolve","reject","onError","marked","prototype","warn","checkSanitizeDeprecation","done","err","pending","setTimeout","then","all","catch","setOptions","newDefaults","use","args","childTokens","pack","opts","ext","prevRenderer","apply","prop","prevTokenizer","prevHook","passThroughHooks","has","arg","values","concat","job","DOMPurify","window","require","undefined","x","y","description","ALLOWED_TAGS","log","jobToMarkdown","badges","badge","Badge","key","percentOSS","Link","to","id","entity","percentTime","deadline","location","dangerouslySetInnerHTML","__html","module","exports","_toConsumableArray","arr","Array","isArray","arr2","from","setPrototypeOf","isFrozen","freeze","seal","Reflect","construct","fun","thisValue","Func","Function","bind","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","_key","_len2","_key2","addToSet","set","array","element","lcElement","clone","object","newObject","property","svg","svgFilters","mathMl","html$1","svg$1","mathMl$1","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_typeof","Symbol","iterator","_toConsumableArray$1","getGlobal","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","html$$1","createDOMPurify","root","version","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","template","createElement","ownerDocument","trustedTypesPolicy","emptyHTML","RETURN_TRUSTED_TYPE","_document","implementation","createNodeIterator","getElementsByTagName","createDocumentFragment","importNode","documentMode","createHTMLDocument","MUSTACHE_EXPR$$1","ERB_EXPR$$1","DATA_ATTR$$1","ARIA_ATTR$$1","IS_SCRIPT_OR_DATA$$1","ATTR_WHITESPACE$$1","IS_ALLOWED_URI$$1","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","tbody","_forceRemove","parentNode","removeChild","outerHTML","_removeAttribute","attribute","getAttributeNode","removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","firstElementChild","insertBefore","createTextNode","childNodes","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isClobbered","elm","nodeName","textContent","attributes","setAttribute","namespaceURI","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","tagName","allowedTags","querySelectorAll","innerHTML","insertAdjacentHTML","htmlToInsert","cloneNode","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","forceKeepAttr","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","importedNode","oldNode","returnNode","toStaticHTML","appendChild","firstChild","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","factory","children"],"sourceRoot":""}